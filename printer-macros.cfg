# https://github.com/fl0r1s/klipper_config/blob/master/cr10/macros.cfg
# https://github.com/Klipper3d/klipper/blob/master/config/sample-macros.cfg

######################################################################
# Start print
######################################################################
[gcode_macro START_PRINT]
description: Replace the slicer's custom start and end g-code scripts with START_PRINT.
gcode:
  {% set Z_MAX = printer.toolhead.axis_maximum.z|default(260)|float %}
  CLEAR_PAUSE ;https://www.klipper3d.org/G-Codes.html#clear_pause - It is recommended to add this to your start gcode to make sure the paused state is fresh for each print.
  # Get bed and extruder temperature from slicer
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  POWER_ON_LIGHTS
  SET_ENCLOSURE_TARGET_TEMP
  # Start bed heating
  {% if params.BED_TEMP is not none %}
    M140 S{BED_TEMP}
  {% endif %}
  # Wait for bed to reach temperature
  {% if params.BED_TEMP is not none %}
    M190 S{BED_TEMP}
  {% endif %}
  BED_MESH_PROFILE LOAD=default # load the default bed mesh profile since it is not automatically loaded anymore since 1 Feb 2023
  #SET_GCODE_OFFSET Z=0.0 ;Reset the G-Code Z offset (adjust Z offset if needed) - Dont want to do this, z offset should already be tuned.
  G28 ; Home the printer
  #G90 ; Absolute positioning
  # instead of moving up and waiting for extruder to reach target temp go to where the blob is going to be purged and wait there so that if any oozing happens it doesnt drop in the middle of the bed.
  #G1 Z{Z_MAX / 4.0} F6000 ; Move up to keep bed clean
  # Set and wait for nozzle to reach temperature
  #{% if params.EXTRUDER_TEMP is not none %}
  #  M104 S{EXTRUDER_TEMP}
  #  M109 S{EXTRUDER_TEMP}
  #{% endif %}
  PURGE_BLOB EXTRUDER_TEMP={params.EXTRUDER_TEMP}

######################################################################
# Purge blob
######################################################################
[gcode_macro PURGE_BLOB]
gcode:
  # Generate pseudo random start position so we dont wear out that one spot on the bed.
  {% set X_START = (90 + ( printer.system_stats.cputime * 1000 ) % 35)|float %}
  {% set Y_START = -1.0|float %}
  G90                                  ; Absolute positioning
  G1 X{ X_START } Y{Y_START} Z10 F18000; Go to start pos for perge line
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  # Set and wait for nozzle to reach temperature
  {% if params.EXTRUDER_TEMP is not none %}
    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}
  {% endif %}
  G1 Z0.4 F600                         ; Lower to purge height
  G91                                  ; Relative positioning
  M106 S0                              ; Turn off cooling fan
  G92 E0                               ; Zero the extruder
  G1 X5 E10 F40                        ; Extrude blob of filament on the bed
  M106 P0                              ; Enable cooling Fan
  G1 X30 Z10 F100                      ; Slow drag away from the blob with fans helping cool and break strings. Also raize Z so the blob clears the fan duct
  G1 X5  Z-10.2 F9000                  ; Now that the blob has cleared the duct we go back down for a short 0.2mm height extrusion
  G1 X5 E2 F180                        ; Slow 5mm extrude move to help with stringing
  G1 X30 E-1 F6000                     ; Fast move and retract to break strings and reduce ooze
  G1 Z1 F100                           ; Lift
  M106 P0 S0                           ; Disable Cooling Fan
  G92 E0                               ; Zero the extruder
  G90                                  ; Absolute positioning

######################################################################
# End print
######################################################################
[gcode_macro END_PRINT]
description: Replace the slicer's custom start and end g-code scripts with END_PRINT.
gcode:
  M104 S0                              ; Turn-off hotend
  G91                                  ; Relative positioning
  G1 E-2 F2700                         ; Retract a bit
  G1 E-2 Z0.2 F2400                    ; Retract and raise Z
  G1 X5 Y5 F3000                       ; Wipe out
  M106 S0                              ; Turn-off fan
  M140 S0                              ; Turn-off bed
  G1 Z20                               ; Raise Z more
  G90                                  ; Absolute positioning
  G1 X50 Y200.0                        ; Present print
  #M84 X Y E                           ; Disable all steppers but Z
  VENT_ENCLOSURE

######################################################################
# Idle timeout
######################################################################
[gcode_macro IDLE_TIMEOUT_SHUTDOWN]
gcode: 
  SDCARD_RESET_FILE
  TURN_OFF_HEATERS
  VENT_ENCLOSURE
  M84 X Y E ; Disable all steppers but Z
  # Wait for hotend and bed to reach room temp - https://www.klipper3d.org/G-Codes.html#temperature_wait
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=40.0
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=40.0
  DISABLE_ENCLOSURE_FAN
  POWER_OFF_LIGHTS
  POWER_OFF_PRINTER ; Switch off the printer - this causes the enclosure fan to go once klipper is not running and only moonraker

######################################################################
# Filament Change
######################################################################
[gcode_macro M600]
description: Filament Change. This macro will pause the printer, move the tool to the change position, and retract the filament 50mm. Adjust the retraction settings for your own extruder. After filament has been changed, the print can be resumed from its previous position with the "RESUME" gcode.
gcode:
  {% set X = params.X|default(50)|float %}
  {% set Y = params.Y|default(0)|float %}
  {% set Z = params.Z|default(10)|float %}
  SAVE_GCODE_STATE NAME=M600_state
  PAUSE
  G91                                     ; Relative positioning
  G1 E-.8 F2700                           ; Retract a bit
  G1 Z{Z}
  G90                                     ; Absolute positioning
  G1 X{X} Y{Y} F3000
  G91
  G1 E-50 F1000
  RESTORE_GCODE_STATE NAME=M600_state

######################################################################
# Pause
######################################################################
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

  # TODO check out alternate version below
  ###### set defaults #####
  #{% set x = params.X|default(230) %}      #edit to your park position
  #{% set y = params.Y|default(230) %}      #edit to your park position
  #{% set z = params.Z|default(10)|float %} #edit to your park position
  #{% set e = params.E|default(1) %}        #edit to your retract length
  ##### calculate save lift position #####
  #{% set max_z = printer.toolhead.axis_maximum.z|float %}
  #{% set act_z = printer.toolhead.position.z|float %}
  #{% set lift_z = z|abs %}
  #{% if act_z < (max_z - lift_z) %}
  #  {% set z_safe = lift_z %}
  #{% else %}
  #  {% set z_safe = max_z - act_z %}
  #{% endif %}
  ###### end of definitions #####
  #SAVE_GCODE_STATE NAME=PAUSE_state
  #BASE_PAUSE
  #G91
  #G1 E-{e} F2100
  #G1 Z{z_safe}
  #G90
  #G1 X{x} Y{y} F6000

######################################################################
# Resume print
######################################################################
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

  # TODO check out alternate version below
  #{% set e = params.E|default(1) %} #edit to your retract length
  #G91
  #G1 E{e} F2100
  #G90
  #RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  #BASE_RESUME

######################################################################
# Cancel print
######################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  CANCEL_PRINT_BASE

######################################################################
# Enclosure temperature fan
# https://github.com/Klipper3d/klipper/blob/master/docs/G-Codes.md#temperature_fan
######################################################################
[gcode_macro SET_ENCLOSURE_TARGET_TEMP]
description: Set the enclosure target temperature to be controlled by the temperature fan
gcode:
  {% set TARGET_TEMP  = params.TARGET|default(30.0)|float %}
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=enclosure_fan TARGET={TARGET_TEMP}

[gcode_macro VENT_ENCLOSURE]
description: Enables the enclosure fan permanently
gcode:
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=enclosure_fan TARGET=1.0

[gcode_macro DISABLE_ENCLOSURE_FAN]
description: Disables the enclosure fan permanently unless it gets close the the max temp where it will switch on again
gcode:
  SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=enclosure_fan TARGET=0.0

######################################################################
# Shut down the printer
######################################################################
[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power", device="Printer", state="off")}

######################################################################
# Lights power
######################################################################
[gcode_macro POWER_OFF_LIGHTS]
gcode:
  {action_call_remote_method("set_device_power", device="Lights", state="off")}

[gcode_macro POWER_ON_LIGHTS]
gcode:
  {action_call_remote_method("set_device_power", device="Lights", state="on")}

######################################################################
# PID
######################################################################
[gcode_macro PID_CALIBRATE_HEATER_BED]
gcode:
  {% set TARGET_TEMP = params.TARGET|default(80.0)|float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}

[gcode_macro PID_CALIBRATE_EXTRUDER]
gcode:
  {% set TARGET_TEMP = params.TARGET|default(245.0)|float %}
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}

######################################################################
# Accelerometer
######################################################################
[gcode_macro TEST_ACCEL_Y]
description: Query the bed / y axis ADXL345
gcode:
  ACCELEROMETER_QUERY CHIP=bed

[gcode_macro TEST_ACCEL_X]
description: Query the hotend / x axis ADXL345
gcode:
  ACCELEROMETER_QUERY CHIP=hotend

[gcode_macro MEASURE_RESONANCE_ALL]
description:
gcode:
  SHAPER_CALIBRATE

[gcode_macro MEASURE_RESONANCE_X]
description:
gcode:
  SHAPER_CALIBRATE AXIS=X

[gcode_macro MEASURE_RESONANCE_Y]
description:
gcode:
  SHAPER_CALIBRATE AXIS=Y

######################################################################
# Filament Type Swap
######################################################################
[gcode_macro LOAD_PLA_FROM_PETG]
description: Swap to PLA filament from PETG base config
gcode:
  M221 S115                           ; Set flow %
  M106 S100                           ; Set fan %
  M104 S190                           ; Set hotend temp
  M109 S190                           ; Wait for hotend temp

[gcode_macro LOAD_PLA_PLUS_FROM_PETG]
description: Swap to PLA+ filament from PETG base config
gcode:
  M221 S115                           ; Set flow %
  M106 S100                           ; Set fan %
  M104 S210                           ; Set hotend temp
  M109 S210                           ; Wait for hotend temp

[gcode_macro LOAD_PETG_FROM_PLA_PLUS]
description: Swap to PETG filament from PLA+ base config
gcode:
  M221 S87                            ; Set flow %
  M106 S20                            ; Set fan %
  M104 S245                           ; Set hotend temp
  M109 S245                           ; Wait for hotend temp

######################################################################
# Control Relay Channels
######################################################################
#[gcode_macro OPEN_RELAY_CHANNEL_1]
#gcode:
  #SET_PIN PIN=relay_channel_1 VALUE={1|int}

#[gcode_macro VENT_FAN_OFF]
#gcode:
#  SET_PIN PIN=relay_channel_2 VALUE={1|int}

#[gcode_macro OPEN_RELAY_CHANNEL_3]
#gcode:
#  SET_PIN PIN=relay_channel_3 VALUE={1|int}

#[gcode_macro OPEN_RELAY_CHANNEL_4]
#gcode:
#  SET_PIN PIN=relay_channel_4 VALUE={1|int}

#[gcode_macro CLOSE_RELAY_CHANNEL_1]
#gcode:
#  SET_PIN PIN=relay_channel_1 VALUE={0|int}

#[gcode_macro VENT_FAN_ON]
#gcode:
#  SET_PIN PIN=relay_channel_2 VALUE={0|int}

#[gcode_macro CLOSE_RELAY_CHANNEL_3]
#gcode:
#  SET_PIN PIN=relay_channel_3 VALUE={0|int}

#[gcode_macro CLOSE_RELAY_CHANNEL_4]
#gcode:
#  SET_PIN PIN=relay_channel_4 VALUE={0|int}

#[gcode_macro TOGGLE_RELAY_CHANNEL_1]
#gcode:
#  SET_PIN PIN=relay_channel_1 VALUE={(not printer['output_pin relay_channel_1'].value)|int}

#[gcode_macro VENT_FAN_TOGGLE]
#gcode:
#  SET_PIN PIN=relay_channel_2 VALUE={(not printer['output_pin relay_channel_2'].value)|int}

#[gcode_macro TOGGLE_RELAY_CHANNEL_3]
#gcode:
#  SET_PIN PIN=relay_channel_3 VALUE={(not printer['output_pin relay_channel_3'].value)|int}

#[gcode_macro TOGGLE_RELAY_CHANNEL_4]
#gcode:
#  SET_PIN PIN=relay_channel_4 VALUE={(not printer['output_pin relay_channel_4'].value)|int}
